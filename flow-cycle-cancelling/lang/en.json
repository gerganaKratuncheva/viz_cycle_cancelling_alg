{ 
  "name": "en",
  "fields" : {
    "algorithm_btn_prev": "Previous",
    "algorithm_btn_next": "Next",
    "algorithm_btn_frwd": "Forward",
    "algorithm_btn_paus": "Pause",
    "algorithm_msg_start1": "First choose a starting node!",
    "algorithm_msg_start2": "From this node, the distances to all other nodes are calculated.",
    "algorithm_msg_start3": "Just click on the corresponding node in the graph.",
    "algorithm_msg_finish": "What now?",
    "algorithm_msg_test": "Test your knowledge in exercises:",
    "algorithm_btn_more": "Read the description of the algorithm",
    "algorithm_btn_exe1": "Answer the following questions.",
    "algorithm_btn_exe2": "Which ordering of the edges is optimal?",
    "algorithm_status1": "Cost of source node: ",
    "algorithm_status2": "Cost of edge: ",
    "algorithm_status3": "Cost of target node: ",
    "algorithm_status4": "Cost of target node have to be updated.",
    "algorithm_status5": "Cost of target node cannot be updated.",
    "textdb_text_oneedge": "an edge",
    "textdb_text_edges": "Edges",
    "textdb_text_phase": "Phase",
    "textdb_text_of": "of",
    "textdb_msg_case0_1": "Initialization",
    "textdb_msg_case0_2": "The algorithm now has saved a first estimate for the cost of each node.",
    "textdb_msg_case0_3": "Thus, we number in the node corresponds to the the first estimate of the cost of a cheapest path from the starting node to this node.",
    "textdb_msg_case0_4": "As no calculation has been done yet, we estimate infinite cost for all nodes apart from the starting node itself.",
    "textdb_msg_case1_1": "Determining shortest paths",
    "textdb_msg_case1_2": "Checking improvement using red edge",
    "textdb_msg_case1_3": "We are now checking whether the red edge allows a better path to its target node than the one known previously.",
    "textdb_msg_case1_4": "We thus check whether the currently known cost of the target node are greater than the cost of the source node plus the cost of the edge.",
    "textdb_msg_case1_5_a": "In the following phase, all shortest paths are being calculated that use at most ",
    "textdb_msg_case1_6": "In each phase, <strong>all edges</strong> are checked in order to assert whether a reduction of the cost of the target node is possible.",
    "textdb_msg_case2_1": "Searching negative circles",
    "textdb_msg_case2_2_a": "Up to now, all shortest paths have been calculated that use at most ",
    "textdb_msg_case2_2_b": ".",
    "textdb_msg_case2_3_a": "As there are ",
    "textdb_msg_case2_3_b": "nodes in the graph, all cheapest paths have been computed correctly, in the graph does not contain negative circles.",
    "textdb_msg_case2_4": "We now check the graph for negative circles.",
    "textdb_msg_case2_5": "Checking red edge",
    "textdb_msg_case2_6": "Check whether the red edge is part of a negative circle.",
    "textdb_msg_case2_7": "To do so, we test whether the currently known cost of the target node are greater that the cost of the source node plus the cost of the edge.",
    "textdb_msg_case2_8": "If this is the case, the red edge is part of a negative circle.",
    "textdb_msg_case3_1": "Result: Negative cirlce found.",
    "textdb_msg_case3_2": "The graph contains a negative circle that can be reached from the starting node.",
    "textdb_msg_case3_3": "Starting from the edge that indicated the negative circle, we went back using predecessor edges until we found a circle. This negative circle is marked red in the graph.",
    "textdb_msg_case4_1": "Result: Algorithm finished successfully.",
    "textdb_msg_case4_2": "This graph does not contain a negative circle reachable from the starting node, and all cost have been computed correctly.",
    "textdb_msg_case4_3": "Move the pointer on a node in order to see the shortest path to this node.",
    "textdb_msg_case5_1": "Now the algorithm can begin!",
	
    "aufgabe1_btn_next_question": "Forward: Next question",
    "aufgabe1_btn_retry": "Try again with a different graph?",
    "aufgabe1_btn_exe2": "Try the second exercise:",	
	"aufgabe1_btn_chooseNewParameters": "Choose new sourse and target nodes and continue with the exercise",
    "aufgabe1_question1": "Is there a valid flow for this network? ",
    "aufgabe1_answer1": "Yes",	
    "aufgabe1_answer1_reason1": "There exists a path from the source node s to the target node t, thus there exist a valid flow.",
	"aufgabe1_answer1_2": "No",
    "aufgabe1_answer1_reason2": "There is no path from the source node s to the target node t in the residual network, thus there is no valid flow.",
	"aufgabe1_question2": "What is the cost of this maximal flow?",
	"aufgabe1_answer2": "The cost is: ",
    "aufgabe1_answer2_reason2": "The cost of an edge is calculated as the product of the flow througt the edge and the cost per flow unit of the edge. The total cost of the flow in the network is the sum off all the edge costs. The cost of this flow is: ",
	"aufgabe1_answer2_reason3": "The cost of an edge is calculated as the product of the flow througt the edge and the cost per flow unit of the edge. The total cost of the flow in the network is the sum off all the edge costs. Thus, the correct answer is ",
    "aufgabe1_answer2_reason3": "The node's distance has not been changed, as the red edge did not allow a short-cut.",
    "aufgabe1_question3": "Can the cost of the flow be decreased?",
	"aufgabe1_answer3": "Yes",
    "aufgabe1_answer3_reason1": "The cost of the flow can be decreased as long as there exist a negative cycle in the residual network. Some of the flow can be redirected through the negative cycle which always leads to decreasing of the costs. The residual network contains the negative cycle: ",
	"aufgabe1_question4": "Can the cost of the flow be decreased?",
	"aufgabe1_answer4": "No",
    "aufgabe1_answer4_reason1": "The cost of the flow can be decreased as long as there exist a negative cycle in the residual network. Some of the flow can be redirected through the negative cycle which always leads to decreasing of the costs. There are no more negative cost cycles in this residual network, thus the cost is minimal. ",
    "aufgabe1_answer3_reason2": "Proof:",
    "aufgabe1_answer3_reason3": "The edge is \"consistent\", no short-cut is possible.",
    "aufgabe1_msg_case3_4": "The circle has been marked in red in the graph.",
	"aufgabe1_question2_newParameters": "There is no valid flow from the chosen source to the chosen target node. Would you want to choose another source and target nodes or you prefere to end the exercise?",

	
	
    "aufgabe1_text_yes": "Yes",
    "aufgabe1_text_no": "No",
    "aufgabe1_text_infinity": "Infinity",
    "aufgabe1_text_question": "Question",
    "aufgabe1_text_results": "Results",
    "aufgabe1_text_right_answer": "Right answer:",
	"aufgabe1_text_wrong_answer": "Your answer was wrong.",
    "aufgabe1_result1": "Congratulations!",
    "aufgabe1_result2": "You have answered all questions correctly.",
    "aufgabe1_result3": "Exercise completed",
    "aufgabe1_result4": "Number of questions:",
    "aufgabe1_result5": "Correct answers:",
    "aufgabe1_result6": "Wrong answers:",
	
	"aufgabe2_text_question": "Network",
	"aufgabe2_text_results": "Results",
    "aufgabe2_msg_start1": "First, choose the graph which you want to work with.",
    "aufgabe2_msg_start2": "Then click on the starting node to begin.",
    "aufgabe2_msg_start3": "The click on the edges in the same ordering you want the algorithm to handle them.",
    "aufgabe2_btn_rev": "Reverse last choice",
	"aufgabe2_btn_retry": "Try again?",
    "aufgabe2_btn_more": "Learn more about the algorithm",
    "aufgabe2_msg_1": "The algorithm has now initialized the distance values of all nodes.",
    "aufgabe2_msg_2": "Click on the edge the algorithm should check first.",
    "aufgabe2_msg_3": "Update of edges",
    "aufgabe2_msg_4": "The algorithm has now checked whether the chosen edges allows a short-cut and has updated the distance values.",
    "aufgabe2_msg_5": "Click on the edge the algorithm should check next.",
	
	"aufgabe2_result1": "Congratulations!",
    "aufgabe2_result2": "You have cosntructed all resuidual networks correctly.",
    "aufgabe2_result3": "Exercise completed",
    "aufgabe2_result4": "Number of networks:",
    "aufgabe2_result5": "Correct residual networks:",
    "aufgabe2_result6": "Wrong residual networks:",
	
	
    "aufgabe2_result_1": "As the graph does not contain any edges, the ordering is optimal.",
    "aufgabe2_result_2": "The edge ordering is optimal; the Bellman-Ford Algorithm would yield a correct result after only one phase.",
    "aufgabe2_result_3": "Result",
    "aufgabe2_result_4_a": "The graph contains a reachable negative circle. As this can only be checked at the end, the algorithm would have needed all",
    "aufgabe2_result_4_b": "phases",
    "aufgabe2_result_4_c": ". A short-cut is still possible using the red edge, for example.",
    "aufgabe2_result_5_a": "Using this ordering, the algorithm would yield a correct result after",
    "aufgabe2_result_5_b": ". A short-cut is still possible using for example the red edge.",
    "aufgabe2_explan1": "Which orderings are optimal?",
    "aufgabe2_explan2": "Unfortunately, it is not easy to find the optimal ordering. It is as difficult (thus tedious) as the algorithm itself.",
    "aufgabe2_explan3": "What do I need a good ordering for?",
    "aufgabe2_explan4": "In practice, it is useful to abort the algorithm as soon as the last phase did not yield any change; as the result is optimal then.",
    "aufgabe2_explan5": "There exist heuristical procedures (approximation methods) that try to obtain a good ordering.",
	"tabChange_stay": "Stay in tab",
	"tabChange_change": "Change tab"
  }
}
